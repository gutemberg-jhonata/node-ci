name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
        
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: semantic
        with:
          branches: |
            ["main"]
          plugins: | 
            [
              "@semantic-release/commit-analyzer", 
              "@semantic-release/release-notes-generator",
              [
                "@semantic-release/npm", 
                {
                  "npmPublish": false
                }
              ],
              "@semantic-release/github",
              [
                "@semantic-release/git",
                {
                  "assets": ["package.json"],
                  "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
                }
              ]
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-ci:${{ steps.semantic.outputs.release-version }}
